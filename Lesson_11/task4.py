'''4. Программа с классом Sphere для представления сферы
в трёхмерном пространстве. Реализовать методы:
● конструктор, принимающий 4 числа: радиус и координаты
центра сферы x, y, z. Если конструктор вызывается без
аргументов, создать объект сферы с единичным радиусом
и центром в начале координат. Если конструктор
вызывается только с радиусом, создать объект с
соответствующим радиусом и центром в начале
координат
● метод get_volume(), возвращающий число – объем шара,
ограниченного текущей сферой
● метод get_square(), возвращающий число – площадь
внешней поверхности сферы
● метод get_radius(), возвращающий число – радиус текущей
сферы
● метод get_center(), возвращающий кортеж с координатами
центра сферы
● метод set_radius(radius), который принимает новое
значение радиуса, меняет радиус текущей сферы и ничего
не возвращает
Продолжение ->
Задания
● метод set_center(x, y, z), который принимает новые
значения для координат центра радиуса, меняет
координаты текущей сферы и ничего не возвращает
● метод is_point_inside(x, y, z), который принимает
координаты некой точки в трёхмерном пространстве и
возвращает True или False в зависимости от того,
находится ли точка внутри сферы'''
import math as m
class Sphere:
    def __init__(self, radius = 1 , x=0, y=0, z=0):
        self.radius = radius
        self.x = x
        self.y = y
        self.z = z

    def get_volume(self):
        return (4/3)*(m.pi* self.radius ** 3)

    def get_square(self):
        return 4*m.pi*self.radius**2

    def get_radius(self):
        return self.radius

    def get_center(self):
        return (self.x, self.y, self.z)

    def set_radius(self, radius):
        self.radius = radius
    def set_center(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z

    def is_point_inside(self, x, y, z):
        # Вычисляем расстояние от точки (x, y, z) до центра сферы (self.x, self.y, self.z)
        d = m.sqrt((x - self.x) ** 2 + (y - self.y) ** 2 + (z - self.z) ** 2)
        # Если расстояние меньше или равно радиусу, точка внутри сферы
        return d <= self.radius


s = Sphere(3, 0, 0, 0)  # Сфера с радиусом 3 и центром в (0, 0, 0)
print(s.get_volume())  # Выведет объем
print(s.get_square())  # Выведет площадь поверхности
print(s.get_center())  # Выведет центр сферы
print(s.is_point_inside(1, 1, 1))  # Проверит, внутри ли точка (1, 1, 1)
s.set_radius(10)
print(s.get_radius())